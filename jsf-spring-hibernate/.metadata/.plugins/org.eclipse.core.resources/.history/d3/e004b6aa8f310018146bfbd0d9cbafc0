package com.concretepage.endpoints;

//import org.springframework.beans.BeanUtils;
import org.springframework.ws.server.endpoint.annotation.Endpoint;
import org.springframework.ws.server.endpoint.annotation.PayloadRoot;
import org.springframework.ws.server.endpoint.annotation.RequestPayload;
import org.springframework.ws.server.endpoint.annotation.ResponsePayload;

import com.concretepage.gs_ws.AddEmployeeRequest;
import com.concretepage.gs_ws.AddEmployeeResponse;
import com.concretepage.gs_ws.DeleteEmployeeRequest;
import com.concretepage.gs_ws.DeleteEmployeeResponse;
import com.concretepage.gs_ws.EmployeeInfo;
import com.concretepage.gs_ws.EmployeeStatus;
import com.concretepage.gs_ws.GeAllEmployeesByNameResponse;
import com.concretepage.gs_ws.GetAllEmployeesByNameRequest;
import com.concretepage.gs_ws.GetEmployeeByNameRequest;
import com.concretepage.gs_ws.GetEmployeeByNameResponse;
import com.concretepage.gs_ws.UpdateEmployeeRequest;
import com.concretepage.gs_ws.UpdateEmployeeResponse;

@Endpoint
public class EmployeeEndpoint {

	private static final String NAMESPACE_URI = "http://www.concretepage.com/employee-ws";
	
	
	@PayloadRoot(namespace = NAMESPACE_URI, localPart = "getEmployeeByNameRequest")
	@ResponsePayload
	public GetEmployeeByNameResponse getEmployee(@RequestPayload GetEmployeeByNameRequest request) {
		
		GetEmployeeByNameResponse response = new GetEmployeeByNameResponse();
		EmployeeInfo info = new EmployeeInfo();
		info.setAddress("TEST");
		response.setEmployeeInfo(info);
		return response;
	}
	
	@PayloadRoot(namespace = NAMESPACE_URI, localPart = "getAllEmployeesByNameRequest")
	@ResponsePayload
	public GeAllEmployeesByNameResponse getEmployee(@RequestPayload GetAllEmployeesByNameRequest request) {
		
		GetEmployeeByNameResponse response = new GetEmployeeByNameResponse();
		EmployeeInfo info = new EmployeeInfo();
		info.setAddress("TEST");
		response.setEmployeeInfo(info);
		return response;
	}
	
	@PayloadRoot(namespace = NAMESPACE_URI, localPart = "addEmployeeRequest")
	@ResponsePayload
	public AddEmployeeResponse addEmployee(@RequestPayload AddEmployeeRequest request) {
		
		AddEmployeeResponse response = new AddEmployeeResponse();
		EmployeeInfo info = new EmployeeInfo();
		info.setAddress("TEST");
		response.setEmployeeInfo(info);
        return response;
	}
	@PayloadRoot(namespace = NAMESPACE_URI, localPart = "updateEmployeeRequest")
	@ResponsePayload
	public UpdateEmployeeResponse updateEmployee(@RequestPayload UpdateEmployeeRequest request) {
		
		UpdateEmployeeResponse response = new UpdateEmployeeResponse();
		EmployeeStatus serviceStatus = new EmployeeStatus();
		serviceStatus.setMessage("Sucess");
	   	serviceStatus.setStatusCode("450");
        response.setEmployeeStatus(serviceStatus);
        return response;
	}
	@PayloadRoot(namespace = NAMESPACE_URI, localPart = "deleteEmployeeRequest")
	@ResponsePayload
	public DeleteEmployeeResponse deleteEmployee(@RequestPayload DeleteEmployeeRequest request) {
		
		DeleteEmployeeResponse response = new DeleteEmployeeResponse();
		EmployeeStatus serviceStatus = new EmployeeStatus();
		serviceStatus.setMessage("Sucess");
	   	serviceStatus.setStatusCode("450");
	    response.setEmployeeStatus(serviceStatus);
        return response;
	}
	
}
